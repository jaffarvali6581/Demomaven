<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-11T22:16:27 IST" name="Default suite" finished-at="2021-11-11T22:16:39 IST" duration-ms="11846">
    <groups>
    </groups>
    <test started-at="2021-11-11T22:16:27 IST" name="Default test" finished-at="2021-11-11T22:16:39 IST" duration-ms="11846">
      <class name="hello_world.Extent11">
        <test-method is-config="true" signature="startReport()[pri:0, instance:hello_world.Extent11@3c7f66c4]" started-at="2021-11-11T22:16:27 IST" name="startReport" finished-at="2021-11-11T22:16:28 IST" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="failTest()[pri:0, instance:hello_world.Extent11@3c7f66c4]" started-at="2021-11-11T22:16:28 IST" name="failTest" finished-at="2021-11-11T22:16:37 IST" duration-ms="9293" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [abc] but found [https://blazedemo.com/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [abc] but found [https://blazedemo.com/]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at hello_world.Extent11.failTest(Extent11.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:hello_world.Extent11@3c7f66c4]" started-at="2021-11-11T22:16:37 IST" name="getResult" finished-at="2021-11-11T22:16:38 IST" duration-ms="1027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failTest status=FAILURE method=Extent11.failTest()[pri:0, instance:hello_world.Extent11@3c7f66c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="passTest()[pri:0, instance:hello_world.Extent11@3c7f66c4]" started-at="2021-11-11T22:16:38 IST" name="passTest" finished-at="2021-11-11T22:16:38 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:hello_world.Extent11@3c7f66c4]" started-at="2021-11-11T22:16:38 IST" name="getResult" finished-at="2021-11-11T22:16:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTest status=SUCCESS method=Extent11.passTest()[pri:0, instance:hello_world.Extent11@3c7f66c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="skipTest()[pri:0, instance:hello_world.Extent11@3c7f66c4]" started-at="2021-11-11T22:16:38 IST" name="skipTest" finished-at="2021-11-11T22:16:38 IST" duration-ms="4" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this method as it is not ready for testing]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this method as it is not ready for testing
at hello_world.Extent11.skipTest(Extent11.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:hello_world.Extent11@3c7f66c4]" started-at="2021-11-11T22:16:38 IST" name="getResult" finished-at="2021-11-11T22:16:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=Extent11.skipTest()[pri:0, instance:hello_world.Extent11@3c7f66c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endRepor()[pri:0, instance:hello_world.Extent11@3c7f66c4]" started-at="2021-11-11T22:16:38 IST" name="endRepor" finished-at="2021-11-11T22:16:39 IST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endRepor -->
      </class> <!-- hello_world.Extent11 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
